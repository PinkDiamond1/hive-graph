# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Coin {
  denom: String!
  amount: String!
}

type Account implements BaseAccount {
  address: String!
  coins: [Coin!]!
  public_key: PublicKeyUnion
  account_number: Int!
  sequence: Int!
}

interface BaseAccount {
  address: String!
  coins: [Coin!]!
  public_key: PublicKeyUnion
  account_number: Int!
  sequence: Int!
}

union PublicKeyUnion = PublicKey | MultisigPublicKey

type MultisigPublicKey {
  type: String!
  threshold: String!
  pubkeys: [PublicKey!]!
}

type Auth {
  accountInfo(address: String!): Account!
}

type PublicKey {
  type: String!
  value: String!
}

type ScheduleEntry {
  start_time: String!
  end_time: String!
  ratio: String!
}

type VestingSchedule {
  denom: String!
  schedules: [ScheduleEntry!]!
}

type Bank {
  balance(address: String!): [Coin!]!
}

type DistributionParams {
  community_tax: String!
  base_proposer_reward: String!
  bonus_proposer_reward: String!
  withdraw_addr_enabled: Boolean!
}

type RewardItem {
  validator_address: String!
  reward: [Coin!]!
}

type Rewards {
  rewards: [RewardItem!]!
  total: [Coin!]!
}

type ValidatorRewards {
  self_bond_rewards: [Coin!]!
  val_commission: [Coin!]!
}

type Distribution {
  rewards(delegator: String!): Rewards!
  validatorRewards(validator: String!): ValidatorRewards!
  withdrawAddress(delegator: String!): String!
  communityPool: [Coin!]!
  parameters: DistributionParams!
}

type Query {
  ping: String!
  auth: Auth!
  bank: Bank!
  distribution: Distribution!
}
